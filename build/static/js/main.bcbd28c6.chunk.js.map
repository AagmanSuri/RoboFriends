{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","App","onSearchChange","event","setState","searchfield","target","value","state","fetch","then","response","json","users","filteredRobots","this","filter","toLowerCase","includes","length","classsName","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAiBeA,EAdF,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,KAAKC,EAAc,EAAdA,MAAMC,EAAQ,EAARA,GAEtB,OACI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,cACrB,gCACG,6BAAKF,IACL,4BAAIC,WCUJK,EAhBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACf,OACJ,8BAEAA,EAAOC,KAAI,SAACC,EAAKC,GACT,OACA,cAAC,EAAD,CACAR,GAAKK,EAAOG,GAAGR,GACfF,KAAMO,EAAOG,GAAGV,KAChBC,MAASM,EAAOG,GAAGT,OAHPS,SCKLC,EAbC,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,aACd,OACG,qBAAKT,UAAU,MAAf,SACK,uBACAA,UAAU,mCACVU,KAAM,SACNC,YAAY,gBACZC,SAAUH,OCAPI,EAPA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAAEC,UAAW,SAASC,OAAO,kBAAkBC,OAAO,SAAlE,SACKJ,EAAMK,YCwCJC,G,wDAtCX,aAAc,IAAD,8BACT,gBAcJC,eAAiB,SAACC,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAMG,OAAOC,SAd1C,EAAKC,MAAO,CACRvB,OAAO,GACPoB,YAAY,IAJP,E,qDAQb,WAAoB,IAAD,OACfI,MAAM,6CACLC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UACxBF,MAAK,SAAAG,GAAK,OAAE,EAAKT,SAAS,CAACnB,OAAO4B,S,oBAQvC,WAAS,IAAD,OACEC,EAAiBC,KAAKP,MAAMvB,OAAO+B,QAAO,SAAA/B,GAC5C,OAAOA,EAAOP,KAAKuC,cAAcC,SAAS,EAAKV,MAAMH,YAAYY,kBAErE,OAA8B,IAA3BF,KAAKP,MAAMvB,OAAOkC,OACV,yCAGP,sBAAKtC,UAAU,KAAf,UACI,oBAAIuC,WAAY,KAAhB,yBACC,cAAC,EAAD,CAAW9B,aAAcyB,KAAKb,iBAC3B,cAAC,EAAD,UACI,cAAC,EAAD,CAAUjB,OAAQ6B,a,GAhCxBO,cCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.bcbd28c6.chunk.js","sourcesContent":["import React from 'react';\n\n\nconst Card = ({name,email,id}) => {\n \n    return (\n        <div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\n            <img alt='robots' src={`https://robohash.org/${id}?200x200`}/>\n            <div>\n               <h2>{name}</h2>\n               <p>{email}</p>\n            </div>\n\n        </div>\n\n    )\n}\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\n\nconst CardList = ({robots}) => {\n    return (     \n<div>\n    {\nrobots.map((user,i)=>{\n        return(\n        <Card key ={i} \n        id ={robots[i].id} \n        name={robots[i].name} \n        email = {robots[i].email}\n        /> )\n    })\n}\n</div>\n    );\n}\nexport default CardList;","import React from 'react';\n\nconst SearchBox=({searchChange})=>{\n    return(\n       <div className='pa2'> \n            <input \n            className='pa3 ba b--green bg-lightest-blue'\n            type ='search' \n            placeholder='Search robots'\n            onChange={searchChange}\n            />\n           \n        </div>\n    );\n}\nexport default SearchBox;\n","import React from'react';\n\nconst Scroll = (props) =>{\n    return(\n        <div style={{ overflowY :'scroll',border:'1px solid black',height:'800px' }}>\n            {props.children}\n        </div>\n    );\n};\nexport default Scroll;","import React,{Component} from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport './App.css'\n\nclass App extends Component {\n    constructor(){\n        super()\n        this.state= {\n            robots:[],\n            searchfield:''\n        }\n        \n    }\n    componentDidMount(){\n        fetch('http://jsonplaceholder.typicode.com/users')\n        .then(response=>response.json())\n        .then(users=>this.setState({robots:users}));\n     \n    }\n\n    onSearchChange = (event) => {  \n        this.setState({ searchfield: event.target.value})\n    \n    }\n    render(){\n        const filteredRobots = this.state.robots.filter(robots=>{\n            return robots.name.toLowerCase().includes(this.state.searchfield.toLowerCase())\n        })\n        if(this.state.robots.length===0){\n            return <h1>Loading</h1>\n        }else{\n        return(\n            <div className='tc'>\n                <h1 classsName ='f1'>RoboFriends</h1>\n                 <SearchBox searchChange={this.onSearchChange}/>\n                    <Scroll>\n                        <CardList robots={filteredRobots}/>\n                    </Scroll>\n            </div>\n        );\n      }\n  }\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}